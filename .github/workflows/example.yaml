name: Example - Call Docs Sync API

on:
  workflow_dispatch:
    inputs:
      markdown_path:
        description: 'Path to the markdown file in this repo'
        required: true
      repository:
        description: 'Repo name (no owner, e.g. prodeng-docs-synchronizer)'
        required: true
      ref:
        description: 'Git ref to read from'
        required: true
      space:
        description: 'Confluence space key'
        required: true
      root_page:
        description: 'Confluence root page ID'
        required: true

jobs:
  call-api:
    runs-on: arc-dind-viper-dev
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log API Call Details
        run: |
          echo "üöÄ Starting API call"
          echo "URL: https://prodeng-docs-synchronizer-dev.doh.vtxdev.net/publish"
          echo "Repository: ${{ github.repository }}"
          echo "Caller Ref: ${{ github.ref }}"
          echo "Input Ref: ${{ github.event.inputs.ref }}"
          echo "Markdown: ${{ github.event.inputs.markdown_path }}"

      - name: Health Check
        run: |
          echo "Checking health endpoint..."
          curl -fsS "https://prodeng-docs-synchronizer-dev.doh.vtxdev.net/actuator/health" || exit 1

      - name: Call Docs Sync API
        id: api-call
        uses: fjogeleit/http-request-action@v1
        with:
          url: 'https://prodeng-docs-synchronizer-dev.doh.vtxdev.net/publish'
          method: 'POST'
          customHeaders: '{"Content-Type":"application/json"}'
          #Replace with wanted page information, make sure secrets are added!
          data: |
            {
              "markdown_path": "docs/example.md",
              "repository": "repo-project",
              "domain": "vertexinc.atlassian.net",
              "username": "${{ secrets.ATLASSIAN_USERNAME }}",
              "api_key": "${{ secrets.ATLASSIAN_TOKEN }}",
              "space": "ABC",
              "root_page": "$5687837271",
              "job": "md2conf"
            }
          timeout: 300000

      - name: Log API Response Details
        run: |
          echo "Status: ${{ steps.api-call.outputs.status }}"
          echo "Headers: ${{ steps.api-call.outputs.headers }}"
          echo "Response: ${{ steps.api-call.outputs.response }}"
          if [ "${{ steps.api-call.outputs.status }}" != "200" ]; then
            echo "‚ùå Request failed"
            exit 1
          fi
