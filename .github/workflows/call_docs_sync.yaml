name: Call Docs Sync API

on:
  workflow_dispatch:

jobs:
  call-api:
    runs-on: arc-dind-viper-dev
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Log API Call Details
        run: |
          echo "üöÄ Starting API call to docs sync service"
          echo "URL: https://prodeng-docs-synchronizer-dev.doh.vtxdev.net/publish"
          echo "Method: POST"
          echo "Timestamp: $(date -u)"
          echo "Repository: ${{ github.repository }}"
          echo "Ref: ${{ github.ref }}"
          echo "Actor: ${{ github.actor }}"
          
      - name: Call Docs Sync API
        id: api-call
        uses: fjogeleit/http-request-action@v1
        with:
          url: "https://prodeng-docs-synchronizer-dev.doh.vtxdev.net/publish"
          method: 'POST'
          customHeaders: '{"Content-Type": "application/json"}'
          data: |
            {
              "markdown_path": "docs/simple-test.md",
              "repository": "prodeng-docs-synchronizer",
              "domain": "vertexinc.atlassian.net",
              "username": "Philip.Rubbo@vertexinc.com",
              "api_key": "${{ secrets.ATLASSIAN_TOKEN }}",
              "space": "PRE",
              "root_page": "5687837271"
            }
          timeout: 300000
      
      - name: Log API Response Details
        run: |
          echo "üìä API Response Analysis:"
          echo "Response Status: ${{ steps.api-call.outputs.response }}"
          echo "HTTP Status: ${{ steps.api-call.outputs.status }}"
          echo "Response Headers: ${{ steps.api-call.outputs.headers }}"
          echo "Response Time: $(date -u)"
          echo ""
          echo "üîç Debugging Information:"
          if [ "${{ steps.api-call.outputs.status }}" != "200" ]; then
            echo "‚ùå API call failed with status: ${{ steps.api-call.outputs.status }}"
            echo "Response body: ${{ steps.api-call.outputs.response }}"
          else
            echo "‚úÖ API call successful"
            echo "Response body: ${{ steps.api-call.outputs.response }}"
          fi
          
      - name: ArgoCD Application Status Check
        if: always()
        run: |
          echo "üîç Checking ArgoCD application status..."
          echo "Application: prodeng-docs-synchronizer-development-cne-usw2-toolsdev01-blue"
          echo "Environment: development"
          echo "Cluster: cne-usw2-toolsdev01-blue"
          echo "Expected URL: https://prodeng-docs-synchronizer-dev.doh.vtxdev.net"
          echo ""
          echo "üìã Next Steps for Debugging:"
          echo "1. Check ArgoCD console for application health"
          echo "2. Verify pod logs in Kubernetes"
          echo "3. Confirm health endpoint accessibility"
          echo "4. Check service and ingress configuration"